#! /usr/bin/env python3
import random
import math
random.seed(1)
TESTSIZE = 3

def input_gen():
    input_list = [None]*4
    for i in range(4):
        input_list[i] = random.randrange(-64,63)
    return input_list

def A_B_gen():
    A_real = input_gen()
    A_img  = input_gen()
    
    A_Matrix_list = [None]*4
    for index,(real,img) in enumerate(zip(A_real,A_img)):
        A_Matrix_list[index] = complex(real, img)
    
    
    B_real = input_gen()
    B_img  = input_gen()
    
    
    B_Matrix_list = [None]*4
    for index,(real,img) in enumerate(zip(B_real,B_img)):
        B_Matrix_list[index] = complex(real, img)
    
    return A_Matrix_list,B_Matrix_list

def ans_gen(A_Matrix_list,B_Matrix_list):
    OUT_MATRIX = [None]*4
    for index,(a,b) in enumerate(zip(A_Matrix_list,B_Matrix_list)):
        OUT_MATRIX[index] = a+b
    Div8_MATRiX = [None]*4
    ANS_MATRiX = [None]*4
    for index,v in enumerate(OUT_MATRIX):
        Div8_MATRiX[index] = v/8
        ANS_MATRiX[index] = complex(math.floor(Div8_MATRiX[index].real), math.floor(Div8_MATRiX[index].imag))
    return ANS_MATRiX

def mode_gen():
    return 0

question_file = open("Lab06_question_file_mega.txt",'w')
ans_file = open("Lab06_ans_file_mega.txt",'w')
question_file.write(str(TESTSIZE)+'\n' )
for i in range(TESTSIZE):
    question_file.write(str(mode_gen())+'\n')
    A,B = A_B_gen()
    for c_value in A:
        question_file.write(str(c_value.real)+'\n')
        question_file.write(str(c_value.imag)+'\n')
        
    ans = ans_gen(A,B)
    for c_number in ans:
        ans_file.write(str(c_number.real)+'\n')
        ans_file.write(str(c_number.imag)+'\n')
    

question_file.close()
ans_file.close


